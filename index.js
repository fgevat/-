'use strict';module.exports=class Expression{constructor(){this._table={};this.define('^',Math.pow,'infix',4,true);this.define('*',this.mul,'infix',3);this.define('/',this.div,'infix',3);this.define('+',this.add,'infix',2);this.define('-',this.sub,'infix',2);this.define(',',Array.of,'infix',1);this.define('(',this.end,'prefix');this.define(')',null,'postfix');this.define('max',Math.max);this.define('min',Math.min);this.define('pow',Math.pow)}define(sym,f,type='fn',precedence=0,direction=false){if(type==='fn')precedence=0;this._table[sym]=Object.assign({},this._table[sym],{[type]:{sym,f,type,precedence,direction,argc:1+('infix'===type)},sym,reg:sym.replace(/[\\^$*+?.()|[\]{}]/g,'\\$&')+(/\w$/.test(sym)?'\\b':'')})}mul(i,j){return i*j}div(i,j){return i/j}add(i,j){return i+j}sub(i,j){return i-j}end(...a){return a.slice(-1)[0]}eval(expression){let match;expression=expression.replace(/\s+/g,'');const values=[],operators=[this._table['('].prefix],exec=_=>{let op=operators.pop();values.push(op.f(...[].concat(...values.splice(-op.argc))));return op.precedence},err=msg=>{return`${msg}`},pattern=new RegExp('\\d+(?:\\.\\d+)?|'+Object.values(this._table).sort((i,j)=>j.sym.length-i.sym.length).map(x=>x.reg).join('|')+'|(\\S)','g');let afterValue=false;pattern.lastIndex=0;do{match=pattern.exec(expression);const[token,bad]=match||[')',undefined],notNumber=this._table[token],notNewValue=notNumber&&!notNumber.prefix&&!notNumber.fn,notAfterValue=!notNumber||!notNumber.postfix&&!notNumber.infix;if(bad||(afterValue?notAfterValue:notNewValue))return err('Синтаксическая ошибка');if(afterValue){const curr=notNumber.postfix||notNumber.infix;do{const prev=operators.slice(-1)[0];if(((curr.precedence-prev.precedence)||prev.direction)>0)break}while(exec());afterValue='postfix'===curr.type;if(')'!==curr.sym){operators.push(curr);if(afterValue)exec()}}else if(notNumber){operators.push(notNumber.prefix||notNumber.fn);if(notNumber.fn){match=pattern.exec(expression);if(!match||'('!==match[0])return err('Функция требует скобок')}}else{values.push(+token);afterValue=true}}while(match&&operators.length);return operators.length?err('Нет закрывающих скобок'):match?err('Избыточные скобки'):values.pop()}}
